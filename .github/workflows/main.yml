name: Scrape latest data

on:  
  workflow_dispatch:
  schedule:
    - cron:  '0 */2 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Prepare the environment
    - name: Check out this repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
   
    # Step 2: Install requirements, so Python script can run
    - name: Install requirements
      run: python -m pip install pandas tqdm  requests beautifulsoup4
    # Step 3    
    - name: Run script to create main csv
      run: python ./scripts/court-calendar-scraper.py 
    # Step 4
    - name: Send mail
      uses: dawidd6/action-send-mail@v3
      with:
        # Required mail server address:
        server_address: smtp.gmail.com
        # Required mail server port:
        server_port: 465
        # Optional (recommended): mail server username:
        username: ${{secrets.MAIL_USERNAME}}
        # Optional (recommended) mail server password:
        password: ${{secrets.MAIL_PASSWORD}}
        # Required mail subject:
        subject: Github Actions job result
        # Required recipients' addresses:
        to: nmcmillan@npr.org
        # Required sender full name (address can be skipped):
        from: Nick McMillan # <user@example.com>
        # Optional whether this connection use TLS (default is true if server_port is 465)
        secure: true
        # Optional plain body:
        body: Build job of ${{github.repository}} completed successfully!
        # Optional HTML body read from file:
        # html_body: file://README.html
        # Optional carbon copy recipients:
        # cc: kyloren@example.com,leia@example.com
        # Optional blind carbon copy recipients:
        # bcc: r2d2@example.com,hansolo@example.com
        # Optional recipient of the email response:
        # reply_to: luke@example.com
        # Optional Message ID this message is replying to:
        # in_reply_to: <random-luke@example.com>
        # Optional unsigned/invalid certificates allowance:
        ignore_cert: true
        # Optional converting Markdown to HTML (set content_type to text/html too):
        convert_markdown: true
        # Optional attachments:
        # attachments: attachments.zip,git.diff,./dist/static/*.js
        # Optional priority: 'high', 'normal' (default) or 'low'
        # priority: low      
    # Step 5
    - name: Commit and push if it changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
